{"version":3,"sources":["services/blogs.js","hooks/index.js","components/Notification.js","reducers/notificationReducer.js","reducers/errorReducer.js","services/login.js","reducers/userReducer.js","components/LoginForm.js","components/Users.js","components/User.js","components/Navbar.js","reducers/blogsReducer.js","components/Togglable.js","components/BlogForm.js","components/BlogList.js","components/CommentForm.js","components/BlogInfo.js","components/Footer.js","services/users.js","reducers/creatorsReducer.js","App.js","store.js","index.js"],"names":["baseUrl","token","getAll","axios","get","then","response","data","setToken","newToken","create","newBlog","a","config","headers","authorization","post","update","id","updatedBlog","put","remove","delete","updateComments","comment","Authorization","newComment","content","useField","type","placeholder","useState","value","setValue","onChange","event","target","reset","excludeReset","connect","state","message","notification","error","className","addNotification","seconds","timeout","dispatch","setTimeout","reducer","action","login","credentials","user","mapDispatchToProps","flagError","clearError","logUserIn","username","password","loginService","window","localStorage","setItem","JSON","stringify","blogsService","handleSubmit","resetForm","preventDefault","exception","onSubmit","columns","Header","accessor","Cell","props","users","forEach","push","name","to","blogs","length","User","blogCount","formattedName","toLowerCase","split","map","s","charAt","toUpperCase","substring","join","blog","key","title","StyledNav","styled","div","padding","style","onClick","handleLogout","removeBlog","addLike","likedBlog","likes","returnedBlog","blogsReducer","sort","b","filter","concat","commentBlogId","find","console","log","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","addBlog","blogObject","author","url","StyledLink","Link","StyledList","ul","blogFormRef","createRef","addComment","returnedComment","handleComment","match","handlePostRemoval","confirm","href","rel","comments","StyledFooter","Footer","getById","creatorsReducer","initializeBlogs","initUser","loggedUserJSON","getItem","parse","removeUser","initializeUsers","usersService","useEffect","logout","removeItem","exact","path","render","userMatch","params","blogMatch","combineReducers","notificationReducer","errorReducer","userReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","GlobalStyles","createGlobalStyle","primary","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.37345ab4.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\n// the token is set when user login is handled\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\n// fetch blog list from API\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\n// use token to create new blog\nconst create = async newBlog => {\n  const config = {\n    headers: { authorization: token },\n  }\n\n  // send the new blog and the config\n  const response = await axios.post(baseUrl, newBlog, config)\n  return response.data\n}\n\nconst update = async (id, updatedBlog) => {\n  const config = {\n    headers: {\n      authorization: token,\n    },\n  }\n  // send the updated blog and the config\n  const response = await axios.put(`${baseUrl}/${id}`, updatedBlog, config)\n  return response.data\n}\n\nconst remove = async id => {\n  const config = {\n    headers: {\n      authorization: token,\n    },\n  }\n  // send blog to delete along with authorization config\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  // return deleted post\n  return response.data\n}\n\nconst updateComments = async (id, comment) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const newComment = {\n    content: comment,\n    id: id,\n  }\n\n  const response = await axios.post(\n    `${baseUrl}/${id}/comments`,\n    newComment,\n    config,\n  )\n  return response.data\n}\n\nexport default { getAll, setToken, create, update, remove, updateComments }\n","import { useState } from 'react'\n\nexport const useField = (type, placeholder) => {\n  const [value, setValue] = useState('')\n\n  const onChange = event => {\n    setValue(event.target.value)\n  }\n\n  const reset = () => {\n    setValue('')\n  }\n\n  const excludeReset = {\n    type,\n    placeholder,\n    value,\n    onChange,\n  }\n\n  return {\n    type,\n    placeholder,\n    value,\n    onChange,\n    reset,\n    excludeReset,\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Notification = ({ error, message }) => {\n  return message ? (\n    <div className={error ? 'error' : 'success'}>{message}</div>\n  ) : null\n}\n\nconst mapStateToProps = state => {\n  return {\n    // message stored in state\n    message: state.notification,\n    error: state.error,\n  }\n}\n\nexport default connect(mapStateToProps)(Notification)\n","const reducer = (state = null, action) => {\n  switch (action.type) {\n    case 'NEW_NOTIFICATION':\n      return action.notification\n    case 'RESET':\n      return null\n    default:\n      return state\n  }\n}\n\n/* ACTION CREATORS */\nexport const addNotification = (notification, seconds) => {\n  const timeout = seconds * 2000\n\n  // adds new notification, then resets state\n  return async dispatch => {\n    // this dispatched after timeout\n    await setTimeout(() => {\n      dispatch({\n        type: 'RESET',\n      })\n    }, timeout)\n\n    // this gets dispatched 1st\n    dispatch({\n      type: 'NEW_NOTIFICATION',\n      notification,\n    })\n  }\n}\n\nexport default reducer\n","const reducer = (state = false, action) => {\n  switch (action.type) {\n    case 'ERROR':\n      return true\n    case 'CLEAR':\n      return false\n    default:\n      return state\n  }\n}\n\nexport const flagError = () => {\n  return {\n    type: 'ERROR',\n  }\n}\nexport const clearError = () => {\n  return {\n    type: 'CLEAR',\n  }\n}\n\nexport default reducer\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  // server returns user details & token\n  return response.data\n}\n\nexport default { login }\n","import loginService from '../services/login'\nimport blogsService from '../services/blogs'\n\nconst reducer = (state = null, action) => {\n  switch (action.type) {\n    case 'INIT_USER':\n      return action.data.user\n    case 'REMOVE_USER':\n      return null\n    case 'LOG':\n      return action.data.user\n    default:\n      return state\n  }\n}\n\n/* ACTION CREATORS */\n\nexport const initUser = () => {\n  return async dispatch => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBloglistUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      blogsService.setToken(user.token)\n      dispatch({\n        type: 'INIT_USER',\n        data: { user },\n      })\n    }\n  }\n}\n\nexport const removeUser = () => {\n  return {\n    type: 'REMOVE_USER',\n  }\n}\n\nexport const logUserIn = (username, password) => {\n  return async dispatch => {\n    const user = await loginService.login({\n      username: username.value,\n      password: password.value,\n    })\n\n    window.localStorage.setItem('loggedBloglistUser', JSON.stringify(user))\n    blogsService.setToken(user.token)\n\n    dispatch({\n      type: 'LOG',\n      data: { user },\n    })\n  }\n}\n\nexport default reducer\n","import { useField } from '../hooks/index'\nimport Notification from '../components/Notification'\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { connect } from 'react-redux'\nimport { addNotification } from '../reducers/notificationReducer'\nimport { flagError, clearError } from '../reducers/errorReducer'\nimport { logUserIn } from '../reducers/userReducer'\n\nconst LoginForm = ({\n  addNotification,\n  flagError,\n  clearError,\n  error,\n  logUserIn,\n}) => {\n  const username = useField('text', 'username')\n  const password = useField('password', 'password')\n\n  const handleSubmit = async event => {\n    const resetForm = () => {\n      username.reset()\n      password.reset()\n    }\n\n    try {\n      event.preventDefault()\n      logUserIn(username, password)\n      resetForm()\n      error && clearError()\n    } catch (exception) {\n      flagError()\n      addNotification(`Invalid username or password!`, 2)\n    }\n  }\n\n  return (\n    <div>\n      <h2>Login to the Application</h2>\n      <Notification error={error} />\n      <form onSubmit={handleSubmit}>\n        <div>\n          <input {...username.excludeReset} />\n          <input {...password.excludeReset} />\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  flagError: PropTypes.func.isRequired,\n  clearError: PropTypes.func.isRequired,\n  logUserIn: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => {\n  // retrieving the state of the notification\n  // from store and returning a prop that holds it\n  return {\n    notification: state.notification,\n    error: state.error,\n  }\n}\n\nconst mapDispatchToProps = {\n  addNotification,\n  flagError,\n  clearError,\n  logUserIn,\n}\n\n// export default LoginForm\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(LoginForm)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport ReactTable from 'react-table'\nimport 'react-table/react-table.css'\n\nconst columns = [\n  {\n    Header: 'Name',\n    accessor: 'name', // String-based value accessors!\n  },\n  {\n    Header: 'Username',\n    accessor: 'username',\n    Cell: props => <span className=\"number\">{props.value}</span>, // Custom cell components!\n  },\n  {\n    Header: 'Blogs Listed',\n    accessor: 'blogs',\n  },\n]\n\nconst Users = props => {\n  const data = []\n  // populate table\n\n  props.users.forEach(user => {\n    data.push({\n      name: <Link to={`/users/${user.id}`}>{user.name}</Link>,\n      username: user.username,\n      blogs: user.blogs.length,\n    })\n  })\n\n  return (\n    <div>\n      <h2>Users</h2>\n      <ReactTable data={data} columns={columns} />\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users,\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(Users)\n","import React from 'react'\n\nconst User = ({ user }) => {\n  const blogCount = user.blogs.length\n\n  const capitalizeFirsts = text => {\n    return text\n      .toLowerCase()\n      .split(' ')\n      .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(' ')\n  }\n\n  const formattedName = capitalizeFirsts(user.name)\n\n  return (\n    <div>\n      <h1> {formattedName}</h1>\n      {blogCount ? (\n        <>\n          <h2>Blogs added</h2>\n          <ul>\n            {user.blogs.map(blog => (\n              <li key={blog.id}>{blog.title}</li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <h3>{formattedName} has not added any blogs</h3>\n      )}\n    </div>\n  )\n}\n\nexport default User\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport styled from 'styled-components'\n\n/**\n * A styled navigation bar.\n */\nconst StyledNav = styled.div`\n  background-color: #9ea3a0;\n  height: 3rem;\n  margin: 15px;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 7px 7px 2px 1px #858285;\n\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(19rem, 1fr));\n  grid-gap: 1rem;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n\n  a {\n    padding: 50px;\n    font-size: 1.3rem;\n    text-decoration: none;\n    color: #191a1a;\n    font-weight: bold;\n    background: inherit;\n  }\n\n  a:hover {\n    text-decoration: none;\n    color: white;\n    background: inherit;\n  }\n\n  ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n    background-color: #333;\n  }\n\n  li {\n    float: left;\n  }\n\n  li a {\n    display: block;\n    color: white;\n    text-align: center;\n    padding: 14px 16px;\n    text-decoration: none;\n  }\n\n  .active {\n    background-color: #4caf50;\n  }\n\n  li a:hover {\n    background-color: #111;\n  }\n`\n\nconst Navbar = props => {\n  const padding = { padding: 5 }\n\n  const capitalizeFirsts = text => {\n    return text\n      .toLowerCase()\n      .split(' ')\n      .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(' ')\n  }\n\n  return (\n    <StyledNav>\n      <div>\n        <Link style={padding} to=\"/blogs\">\n          Blogs\n        </Link>\n        <Link style={padding} to=\"/users\">\n          Users\n        </Link>\n        - <strong>{capitalizeFirsts(props.user.name)}</strong> logged in{' '}\n        <button type=\"submit\" onClick={props.handleLogout}>\n          Logout\n        </button>\n      </div>{' '}\n    </StyledNav>\n  )\n}\n\nconst mapStateToProps = state => {\n  // get state from redux store and pass to component\n  return {\n    blogs: state.blogs,\n    user: state.user,\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(Navbar)\n","import blogsService from '../services/blogs'\n\nconst blogsReducer = (state = [], action) => {\n  switch (action.type) {\n    case `INIT_BLOGS`:\n      return action.data.sort((a, b) => b.likes - a.likes)\n    case `LIKE`:\n      const likedBlog = action.data.returnedBlog\n      const id = likedBlog.id\n      return state\n        .map(blog => (blog.id === id ? likedBlog : blog))\n        .sort((a, b) => b.likes - a.likes)\n    case 'REMOVE':\n      return state\n        .filter(blog => blog.id !== action.data.id)\n        .sort((a, b) => b.likes - a.likes)\n    case 'NEW_BLOG':\n      const newBlog = action.data.returnedBlog\n      return state.concat(newBlog).sort((a, b) => b.likes - a.likes)\n    case `NEW_COMMENT`:\n      const commentBlogId = action.data.blog\n      const updatedBlog = state.find(blog => blog.id === commentBlogId)\n      console.log({ updatedBlog })\n      return state\n        .map(blog => (blog.id === updatedBlog.id ? updatedBlog : blog))\n        .sort((a, b) => b.likes - a.likes)\n    default:\n      return state.sort((a, b) => b.likes - a.likes)\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogsService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs,\n    })\n  }\n}\n\nexport const removeBlog = id => {\n  return async dispatch => {\n    // remove from back end\n    await blogsService.remove(id)\n    dispatch({\n      type: 'REMOVE',\n      data: { id },\n    })\n  }\n}\n\nexport const addBlog = blogObject => {\n  return async dispatch => {\n    // add to back end\n    const returnedBlog = await blogsService.create(blogObject)\n    dispatch({\n      type: 'NEW_BLOG',\n      data: { returnedBlog },\n    })\n  }\n}\n\nexport const addComment = (blog, comment) => {\n  return async dispatch => {\n    const returnedComment = await blogsService.updateComments(blog.id, comment)\n    console.log({ returnedComment })\n    dispatch({\n      type: 'NEW_COMMENT',\n      data: returnedComment,\n    })\n  }\n}\n\n/* async dispatch used below as back end is updated*/\nexport const addLike = likedBlog => {\n  const id = likedBlog.id\n  const updatedBlog = {\n    ...likedBlog,\n    likes: likedBlog.likes + 1,\n    // comments: likedBlog.comments.map(comment => comment.id),\n  }\n\n  return async dispatch => {\n    // update like in back-end and return updated blog\n    const returnedBlog = await blogsService.update(id, updatedBlog)\n    // dispatch the blog with the added like\n    dispatch({\n      type: 'LIKE',\n      data: { returnedBlog },\n    })\n  }\n}\n\nexport default blogsReducer\n","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  /* css attributes passed to control display */\n  const hideWhenVisible = {\n    display: visible ? 'none' : '',\n  }\n  const showWhenVisible = {\n    display: visible ? '' : 'none',\n  }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  // enable visibility to be toggled externally\n  useImperativeHandle(ref, () => toggleVisibility)\n\n  return (\n    <>\n      {/* when component's hidden, button provides option to show it*/}\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      {/* show the component and a cancel option that hides it again */}\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>Cancel</button>\n      </div>\n    </>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n}\n\nexport default Togglable\n","import { useField } from '../hooks/index'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addNotification } from '../reducers/notificationReducer'\nimport { addBlog } from '../reducers/blogsReducer'\nimport Notification from '../components/Notification'\n\nconst BlogForm = ({ addNotification, addBlog }) => {\n  // custom hook for fields\n  const title = useField('text', 'title')\n  const author = useField('text', 'author')\n  const url = useField('url', 'url')\n\n  const handleSubmit = async event => {\n    const resetForm = () => {\n      title.reset()\n      author.reset()\n      url.reset()\n    }\n\n    try {\n      event.preventDefault()\n      const blogObject = {\n        title: title.value,\n        author: author.value,\n        url: url.value,\n      }\n      // add to backend & redux store\n      addBlog(blogObject)\n      addNotification(\n        `A new blog ${title.value} by ${author.value} was added!`,\n        2,\n      )\n      resetForm()\n    } catch (exception) {\n      console.log(exception)\n    }\n  }\n\n  return (\n    <>\n      <Notification />\n      <form onSubmit={handleSubmit}>\n        <div>\n          <input {...title.excludeReset} />\n        </div>\n        <div>\n          <input {...author.excludeReset} />\n        </div>\n        <div>\n          <input {...url.excludeReset} />\n        </div>\n        <button type=\"submit\">Create</button>\n      </form>\n    </>\n  )\n}\n\nBlogForm.propTypes = {\n  addNotification: PropTypes.func.isRequired,\n  addBlog: PropTypes.func.isRequired,\n}\n\n// redux\nconst mapStateToProps = state => {\n  // retrieving the state of the notification\n  // from store and returning a prop that holds it\n  console.log(state)\n  return {\n    notification: state.notification,\n  }\n}\n\nconst mapDispatchToProps = {\n  addNotification,\n  addBlog,\n}\n\n// export default BlogForm\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BlogForm)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addLike, removeBlog } from '../reducers/blogsReducer'\nimport Togglable from '../components/Togglable'\nimport BlogForm from '../components/BlogForm'\nimport { Link } from 'react-router-dom'\n\nimport styled from 'styled-components'\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n\n  &:hover {\n    transform: translateY(-10px);\n  }\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n  display: list-item;\n  border-radius: 3px;\n  padding: 0.5rem 0;\n  margin: 0.5rem 1rem;\n  width: 11rem;\n  background: transparent;\n  color: black;\n\n  background: url(https://andyhooke.co.uk/wp-content/uploads/2018/02/yellow-brushstroke.png);\n  background-repeat: no-repeat;\n  background-size: 100% 95%;\n  padding: 8px 0;\n`\n\nconst StyledList = styled.ul`\n  list-style-type: none;\n  margin: 10px;\n  padding: 15px;\n\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(19rem, 1fr));\n  grid-gap: 1rem;\n`\n\nconst BlogList = props => {\n  // references\n  // const blogRef = React.createRef()\n  const blogFormRef = React.createRef()\n\n  // map each one to a component\n  return (\n    <>\n      <h2>Blogs</h2>\n      {/* blog addition form can be toggled */}\n      <Togglable buttonLabel=\"New Blog\" ref={blogFormRef}>\n        <BlogForm blogs={props.blogs} />\n      </Togglable>\n      <StyledList>\n        {props.blogs.map(blog => (\n          <li key={blog.id}>\n            <StyledLink to={`/blogs/${blog.id}`}>\n              \"{blog.title}\" by <em>{blog.author}</em>\n            </StyledLink>\n          </li>\n        ))}\n      </StyledList>\n    </>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    blogs: state.blogs,\n    users: state.users,\n  }\n}\n\nconst mapDispatchToProps = {\n  // pass action creators to component as props\n  addLike,\n  removeBlog,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BlogList)\n","import { useField } from '../hooks/index'\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addComment } from '../reducers/blogsReducer'\n\nconst CommentForm = props => {\n  // custom hook for fields\n  const content = useField('text', 'add comment')\n\n  const handleComment = async event => {\n    const resetForm = () => {\n      content.reset()\n    }\n\n    try {\n      event.preventDefault()\n      // add comment to the post it relates to\n      props.addComment(props.blog, content.value)\n      resetForm()\n    } catch (exception) {\n      console.log(exception)\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={handleComment}>\n        <input {...content.excludeReset} />\n        <button type=\"submit\">Add Comment</button>\n      </form>\n    </>\n  )\n}\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n}\n\nexport default connect(\n  null,\n  { addComment },\n)(CommentForm)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addLike, removeBlog } from '../reducers/blogsReducer'\nimport CommentForm from '../components/CommentForm'\n\nconst BlogInfo = ({ match, removeBlog, user, addLike }) => {\n  const handlePostRemoval = async () => {\n    // prompt\n    const isConfirmed = window.confirm(\n      `Remove blog ${match.title} by ${match.author} ?`,\n    )\n\n    if (isConfirmed) {\n      removeBlog(match.id)\n    }\n  }\n\n  const displayComments = () => (\n    <ul>\n      {match.comments.map(comment => {\n        return <li key={comment.id}>{comment.content}</li>\n      })}\n    </ul>\n  )\n\n  return (\n    <div>\n      <h1>\n        {match.title} by <em>{match.author}</em>\n      </h1>\n\n      <div>\n        <div>\n          <br />\n          <a href={match.url} target=\"_blank\" rel=\"noopener noreferrer\">\n            Read Post\n          </a>\n          <br />\n          Popularity: {match.likes} likes{' '}\n          <button onClick={() => addLike(match)}>Like</button>\n          <br /> {/*  */}\n          Post added here by: {match.user.name}\n          <br />\n          {match.user && user.name === match.user.name && (\n            <button onClick={handlePostRemoval}>Remove</button>\n          )}\n        </div>\n        <h2>Comments</h2>\n        <CommentForm blog={match} />\n        {match.comments && displayComments()}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    // blogs: state.blogs\n  }\n}\n\nconst mapDispatchToProps = {\n  // pass action creators to component as props\n  addLike,\n  removeBlog,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BlogInfo)\n","import React from 'react'\n\nimport styled from 'styled-components'\n\nconst StyledFooter = styled.div`\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  text-align: center;\n  font-size: 1.5rem;\n  background-color: #999da8;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(19rem, 1fr));\n  grid-gap: 1rem;\n`\n\nconst Footer = () => {\n  return (\n    <StyledFooter>\n      <p>\n        Created by <em>Joel Hassan</em> © 2019\n      </p>\n    </StyledFooter>\n  )\n}\n\nexport default Footer\n","import axios from 'axios'\nconst baseUrl = `/api/users`\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getById = async id => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nexport default { getAll, getById }\n","import usersService from '../services/users'\n\nconst creatorsReducer = (state = [], action) => {\n  switch (action.type) {\n    case `INIT_USERS`:\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const users = await usersService.getAll()\n    dispatch({\n      type: 'INIT_USERS',\n      data: users,\n    })\n  }\n}\n\nexport default creatorsReducer\n","import './index.css'\nimport React, { useEffect } from 'react'\nimport blogsService from './services/blogs'\n\nimport LoginForm from './components/LoginForm'\nimport Users from './components/Users'\nimport User from './components/User'\nimport Navbar from './components/Navbar'\nimport BlogList from './components/BlogList'\nimport BlogInfo from './components/BlogInfo'\nimport Footer from './components/Footer'\n\nimport { connect } from 'react-redux'\n\nimport { initializeBlogs, addLike, removeBlog } from './reducers/blogsReducer'\nimport { initUser, removeUser } from './reducers/userReducer'\nimport { initializeUsers } from './reducers/creatorsReducer'\n\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\n\nconst App = props => {\n  /* SIDE-EFFECTS */\n  useEffect(() => {\n    props.initializeBlogs()\n    props.initUser()\n    props.initializeUsers()\n  }, [])\n\n  const handleLogout = () => {\n    blogsService.setToken(null)\n    window.localStorage.removeItem('loggedBloglistUser')\n    props.removeUser()\n  }\n\n  // matches for parametrized routes\n  const userById = id => props.users.find(user => user.id === id)\n  const blogById = id => props.blogs.find(blog => blog.id === id)\n\n  return (\n    <>\n      <Router>\n        {/* always displayed */}\n        {props.user && <Navbar logout={handleLogout} />}\n        {/* home renders either login or bloglist (if logged in) */}\n        <Route\n          exact\n          path=\"/\"\n          render={() => (props.user ? <BlogList /> : <LoginForm />)}\n        />\n        <Route exact path=\"/users\" render={() => <Users />} />\n        <Route exact path=\"/login\" render={() => <LoginForm />} />\n        <Route exact path=\"/blogs\" render={() => <Redirect to=\"/\" />} />\n\n        <Route\n          exact\n          path=\"/users/:id\"\n          render={({ match }) => {\n            const userMatch = userById(match.params.id)\n            if (!userMatch) {\n              return <Redirect to=\"/users\" />\n            }\n            return <User user={userMatch} />\n          }}\n        />\n\n        <Route\n          exact\n          path=\"/blogs/:id\"\n          render={({ match }) => {\n            const blogMatch = blogById(match.params.id)\n            if (!blogMatch) {\n              return <Redirect to=\"/blogs\" />\n            }\n            return <BlogInfo match={blogMatch} />\n          }}\n        />\n      </Router>\n      <Footer />\n    </>\n  )\n}\n\n/* REDUX MAPPINGS*/\n\nconst mapDispatchToProps = {\n  // pass action creators to component as props\n  initializeBlogs,\n  addLike,\n  removeBlog,\n  initUser,\n  removeUser,\n  initializeUsers,\n}\n\nconst mapStateToProps = state => {\n  // get state from redux store and pass to component\n  return {\n    blogs: state.blogs,\n    user: state.user,\n    users: state.users,\n  }\n}\n\n// inject state and action creators\n// into component\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App)\n","/**\n|--------------------------------------------------\n| Initialise store and apply thunk here\n|--------------------------------------------------\n*/\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport notificationReducer from './reducers/notificationReducer'\nimport blogsReducer from './reducers/blogsReducer'\nimport errorReducer from './reducers/errorReducer'\nimport userReducer from './reducers/userReducer'\nimport creatorsReducer from './reducers/creatorsReducer'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst reducer = combineReducers({\n  blogs: blogsReducer,\n  notification: notificationReducer,\n  error: errorReducer,\n  user: userReducer,\n  users: creatorsReducer,\n})\n\n// defines UI\nconst store = createStore(\n  reducer, //\n  composeWithDevTools(applyMiddleware(thunk)),\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport { createGlobalStyle } from 'styled-components'\nconst GlobalStyles = createGlobalStyle`\n  body {\n    @import url('https://fonts.googleapis.com/css?family=Roboto');\n    font-family: 'Roboto', sans-serif;\n    font-size: 1.5em;\n    background-color: #c2c7c1;\n\n\n\n    /* Adapt the colors based on primary prop */\n    button {\n      // background: ${props => (props.primary ? 'black' : 'white')};\n      background: #737572;\n      color: ${props => (props.primary ? 'white' : '#102605')};\n  \n      font-size: 1em;\n      margin: 1em;\n      padding: 0.25em 1em;\n      border: 2px solid grey;\n      border-radius: 5px;\n    }\n\n    strong {\n      font-weight: bold;\n    }\n\n  }\n`\n\nconst render = () =>\n  ReactDOM.render(\n    <Provider store={store}>\n      <GlobalStyles />\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n  )\n\n// console.log(store.getState())\n\nrender()\n// whenever state changes, render (listener) will be called\n// in effect, the app re-renders with each state update\nstore.subscribe(render)\n"],"sourceRoot":""}